{"version":3,"sources":["components/slides/SlideOne.js","components/slides/SlideTwo.js","components/slides/SlideThree.js","components/Main.js","views/NFY.js","views/BitAlliance.js","views/tek.js","components/widgets/EtherBalance.js","components/widgets/TokenBalance.js","components/widgets/TokenBalanceWidget.js","components/modals/WalletConnect.js","layout/index.js","components/diamond/Buttons.js","components/diamond/Page1.js","components/diamond/Page2.js","components/diamond/Page3.js","views/Diamond.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","marginVertical","marginTop","spacing","marginBottom","textUppercase","textTransform","pairContainer","display","alignItems","justifyContent","breakpoints","down","flexDirection","rewardText","fontSize","typography","SlideOne","styles","Grid","item","container","xs","sm","Box","margin","Typography","variant","style","textAlign","color","className","clsx","component","FormControl","fullWidth","OutlinedInput","id","placeholder","endAdornment","InputAdornment","position","Button","type","SlideTwo","flex","lg","md","paddingX","marginY","xl","wordBreak","radiosContainer","SlideThree","useState","method","setMethod","RadioGroup","defaultValue","FormControlLabel","value","control","Radio","label","onClick","width","marginRight","toUpperCase","marginLeft","trandingItemContainer","up","carouselContainer","flexWrap","mobileColumn","height","Main","props","border","borderColor","padding","currency","navButtonsAlwaysVisible","cycleNavigation","indicatorIconButtonProps","activeIndicatorIconButtonProps","autoPlay","animation","indicatorContainerProps","top","left","NFY","BitAlliance","fontWeight","fontFamily","Tek","EtherBalance","account","useEthers","etherBalance","formatEther","useEtherBalance","TokenBalance","address","tokenBalance","useTokenBalance","formatUnits","TokenBalanceWidget","tokenAddress","tokenLabel","WalletConnect","closeModal","deactivate","size","createTheme","palette","secondary","main","green","light","dark","contrastText","background","default","paper","root","modal","backgroundColor","boxShadow","shadows","drawer","flexShrink","appBar","zIndex","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","closeMenuButton","toolbarBottom","bottom","right","active","borderLeft","borderLeftColor","nav","dummyCategories","name","route","ResponsiveDrawer","children","classes","activateBrowserWallet","React","mobileOpen","setMobileOpen","activeRoute","setActiveRoute","handleDrawerToggle","map","menu","to","textDecoration","ListItem","button","ListItemText","primary","modalWalletOpened","setModalWalletOpened","ConnectWalletSection","Modal","open","onClose","transform","String","substr","ThemeProvider","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Hidden","lgUp","Drawer","anchor","direction","ModalProps","keepMounted","mdDown","Date","getFullYear","href","rel","target","btn","backBtn","nexBtn","Buttons","step","setStep","allSteps","length","Alert","elevation","Page1","selectedBlocks","setSelectedBlocks","setOpen","message","setMessage","handleClose","event","reason","block","console","log","find","b","filter","timestamp","toISOString","handleClick","Snackbar","autoHideDuration","severity","Page2","selectedFacets","setSelectedFacets","facets","values","setValues","facet","Checkbox","checked","findIndex","_facet","onChange","TextField","e","foundFacet","f","Page3","tokenName","tokenSymbol","decimals","supply","totalSupply","fields","setFields","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","date","getDate","getMonth","getHours","getMinutes","getSeconds","reduce","prevSum","currentFacet","Number","preventDefault","payload","Diamond","Rebase","Yeam","Fot","value1","value2","value3","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configDApp","readOnlyChainId","ChainId","Ropsten","readOnlyUrls","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.6bca34dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    FormControl,\r\n    Button,\r\n    InputAdornment,\r\n    OutlinedInput,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    marginVertical: {\r\n        marginTop: theme.spacing(),\r\n        marginBottom: theme.spacing(),\r\n    },\r\n    marginBottom: { marginBottom: theme.spacing(0) },\r\n    textUppercase: { textTransform: 'uppercase' },\r\n    pairContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    rewardText: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: theme.typography.fontSize,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction SlideOne() {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Grid item container justifyContent=\"center\" xs={12}>\r\n            <Grid item container xs={12} spacing={3}>\r\n                <Grid xs={12} sm={6}>\r\n                    <Box margin={1}>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            style={{ textAlign: 'center', marginBottom: 8 }}\r\n                        >\r\n                            UNSTAKE FROM v1 AND MOVE TO v2\r\n                        </Typography>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography\r\n                                color=\"secondary\"\r\n                                className={clsx(\r\n                                    styles.marginBottom,\r\n                                    styles.textUppercase\r\n                                )}\r\n                            >\r\n                                nfy staking vault v2\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography variant=\"h6\"\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    total staked: &nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <Typography\r\n                                className={clsx(\r\n                                    styles.textUppercase,\r\n                                    styles.marginVertical,\r\n                                    styles.rewardText\r\n                                )}\r\n                            >\r\n                                0.10% of reward pool daily\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    your nfy balance:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    staked nfy/nft balance:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <div>\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        apy:&nbsp;\r\n                                    </Typography> */}\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography> */}\r\n                                </div>\r\n                                <div>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        your rewards&nbsp;\r\n                                    </Typography>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                className={styles.marginVertical}\r\n                            >\r\n                                <OutlinedInput\r\n                                    id=\"input\"\r\n                                    placeholder=\"0\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            NFY\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                unstake from v1\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid xs={12} sm={6}>\r\n                    <Box margin={1}>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            style={{ textAlign: 'center', marginBottom: 8 }}\r\n                        >\r\n                            UNSTAKE FROM v1 AND MOVE TO v2\r\n                        </Typography>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography\r\n                                color=\"secondary\"\r\n                                className={clsx(\r\n                                    styles.marginBottom,\r\n                                    styles.textUppercase\r\n                                )}\r\n                            >\r\n                                nfy/eth staking vault v2\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography variant=\"h6\"\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    total staked: &nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <Typography\r\n                                className={clsx(\r\n                                    styles.textUppercase,\r\n                                    styles.marginVertical,\r\n                                    styles.rewardText\r\n                                )}\r\n                            >\r\n                                0.30% of reward pool daily\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    your nfy/eth balance:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    staked lp/nft balance:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <div>\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        apy:&nbsp;\r\n                                    </Typography> */}\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography> */}\r\n                                </div>\r\n                                <div>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        your rewards&nbsp;\r\n                                    </Typography>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                className={styles.marginVertical}\r\n                            >\r\n                                <OutlinedInput\r\n                                    id=\"input\"\r\n                                    placeholder=\"0\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            NFY\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                unstake from v1\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SlideOne;\r\n","import React from 'react';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    FormControl,\r\n    Button,\r\n    OutlinedInput,\r\n    InputAdornment,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    marginVertical: {\r\n        marginTop: theme.spacing(),\r\n        marginBottom: theme.spacing(),\r\n    },\r\n    marginBottom: { marginBottom: theme.spacing() },\r\n    textUppercase: { textTransform: 'uppercase' },\r\n    pairContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    rewardText: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: theme.typography.fontSize,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction SlideTwo() {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            item\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"flex-end\"\r\n            xs={12}\r\n        >\r\n            <Grid item container xs={12} spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Box margin={1}>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            style={{\r\n                                textAlign: 'center',\r\n                            }}\r\n                        >\r\n                            UNSTAKE FROM v2 AND MOVE TO v3\r\n                        </Typography>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            alignItems=\"center\"\r\n                            flex={1}\r\n                        >\r\n                            <Typography\r\n                                color=\"secondary\"\r\n                                className={clsx(\r\n                                    styles.marginBottom,\r\n                                    styles.textUppercase\r\n                                )}\r\n                            >\r\n                                nfy staking vault v2\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    total staked: &nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <Typography\r\n                                className={clsx(\r\n                                    styles.textUppercase,\r\n                                    styles.marginVertical,\r\n                                    styles.rewardText\r\n                                )}\r\n                            >\r\n                                0.10% of reward pool daily\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    your nfy balance:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    staked nfy/nfy:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <div>\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        apy:&nbsp;\r\n                                    </Typography> */}\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography> */}\r\n                                </div>\r\n                                <div>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        your rewards&nbsp;\r\n                                    </Typography>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                className={styles.marginVertical}\r\n                            >\r\n                                <OutlinedInput\r\n                                    id=\"input\"\r\n                                    placeholder=\"0\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            NFY\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </FormControl>\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                container\r\n                                className={styles.marginBottom}\r\n                            >\r\n                                <Grid item lg={6} md={12} style={{ flex: 1 }}>\r\n                                    <Box paddingX={0.5} marginY={1}>\r\n                                        <Button\r\n                                            fullWidth\r\n                                            type=\"button\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                        >\r\n                                            STAKE&nbsp;NFY\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item md={12} lg={6} style={{ flex: 1 }}>\r\n                                    <Box paddingX={0.5} marginY={1}>\r\n                                        <Button\r\n                                            fullWidth\r\n                                            type=\"button\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                        >\r\n                                            unstake\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                claim rewards\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Box margin={1}>\r\n                        <Typography\r\n                            variant=\"body1\"\r\n                            style={{\r\n                                textAlign: 'center',\r\n                            }}\r\n                        >\r\n                            UNSTAKE LP FROM v2 AND MOVE TO v3\r\n                        </Typography>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            alignItems=\"center\"\r\n                            flex={1}\r\n                        >\r\n                            <Typography\r\n                                color=\"secondary\"\r\n                                className={clsx(\r\n                                    styles.marginBottom,\r\n                                    styles.textUppercase\r\n                                )}\r\n                            >\r\n                                nfy/eth staking vault v2\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    total staked: &nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    className={clsx(styles.textUppercase)}\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <Typography\r\n                                className={clsx(\r\n                                    styles.textUppercase,\r\n                                    styles.marginVertical,\r\n                                    styles.rewardText\r\n                                )}\r\n                            >\r\n                                0.30% of reward pool daily\r\n                            </Typography>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    nfy/eth lp balance:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    staked lp/nft:&nbsp;\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={clsx(styles.textUppercase)}\r\n                                    component=\"span\"\r\n                                >\r\n                                    n/a n/a\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={clsx(styles.pairContainer)}>\r\n                                <div>\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        apy:&nbsp;\r\n                                    </Typography> */}\r\n                                    {/* <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography> */}\r\n                                    <br></br>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        your rewards&nbsp;\r\n                                    </Typography>\r\n                                    <Typography\r\n                                        className={clsx(styles.textUppercase)}\r\n                                        component=\"span\"\r\n                                    >\r\n                                        n/a&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <FormControl\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                className={styles.marginVertical}\r\n                            >\r\n                                <OutlinedInput\r\n                                    id=\"input\"\r\n                                    placeholder=\"0\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            NFY\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </FormControl>\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                className={styles.marginBottom}\r\n                                container\r\n                            >\r\n                                <Grid item lg={12} xl={6} style={{ flex: 1 }}>\r\n                                    <Box paddingX={0.2} marginY={1}>\r\n                                        <Button\r\n                                            fullWidth\r\n                                            type=\"button\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            style={{ wordBreak: 'keep-all' }}\r\n                                        >\r\n                                            STAKE&nbsp;\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item lg={12} xl={6} style={{ flex: 1 }}>\r\n                                    <Box paddingX={0.5} marginY={1}>\r\n                                        <Button\r\n                                            fullWidth\r\n                                            type=\"button\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                        >\r\n                                            TRADE\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                claim rewards\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SlideTwo;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    FormControlLabel,\r\n    RadioGroup,\r\n    Radio,\r\n    InputAdornment,\r\n    OutlinedInput,\r\n    Button,\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    marginVertical: {\r\n        marginTop: theme.spacing(),\r\n        marginBottom: theme.spacing(),\r\n    },\r\n\r\n    marginBottom: { marginBottom: theme.spacing() },\r\n    textUppercase: { textTransform: 'uppercase' },\r\n    radiosContainer: {\r\n        flexDirection: 'row',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    pairContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('md')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    rewardText: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: theme.typography.fontSize,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction SlideThree() {\r\n    const styles = useStyles();\r\n    const [method, setMethod] = useState('deposit');\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                // margin={3}\r\n                alignItems=\"center\"\r\n                // padding={3}\r\n                justifyContent=\"center\"\r\n            >\r\n                <Box\r\n                    // margin={5}\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography variant=\"body1\">\r\n                        NFY/ETH LP STAKING VAULT v3\r\n                    </Typography>\r\n                    <Box display=\"flex\" className={clsx(styles.pairContainer)}>\r\n                        <Typography variant=\"h6\" color=\"secondary\">\r\n                            TOTAL STAKED: &nbsp;\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">N/A</Typography>\r\n                    </Box>\r\n                    <Box marginBottom={3}>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            className={clsx(styles.rewardText)}\r\n                        >\r\n                            0.30% OF REWARD POOL DAILY\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" className={clsx(styles.pairContainer)}>\r\n                        <Typography variant=\"body2\" color=\"secondary\">\r\n                            YOUR NFY/ETH BALANCE: &nbsp;\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">N/A</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" className={clsx(styles.pairContainer)}>\r\n                        <Typography variant=\"body2\" color=\"secondary\">\r\n                            STAKED LP/NFY BALANCE: &nbsp;\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                            N/A&nbsp;/&nbsp;N/A\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" className={clsx(styles.pairContainer)}>\r\n                        {/* <Box display=\"flex\" marginRight={3}>\r\n                            <Typography variant=\"body2\" color=\"secondary\">\r\n                                APY: &nbsp;\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">N/A</Typography>\r\n                        </Box> */}\r\n                        <Box display=\"flex\">\r\n                            <Typography variant=\"body2\" color=\"secondary\">\r\n                                YOUR REWARDS: &nbsp;\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">N/A</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box marginY={1}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup\r\n                                className={clsx(styles.radiosContainer)}\r\n                                defaultValue=\"deposit\"\r\n                            >\r\n                                <FormControlLabel\r\n                                    value=\"deposit\"\r\n                                    control={<Radio color=\"secondary\" />}\r\n                                    label=\"Deposit\"\r\n                                    onClick={() => setMethod('deposit')}\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"withdraw\"\r\n                                    control={<Radio color=\"secondary\" />}\r\n                                    label=\"Withdraw\"\r\n                                    onClick={() => setMethod('withdraw')}\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Box>\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        className={styles.marginVertical}\r\n                    >\r\n                        <OutlinedInput\r\n                            id=\"input\"\r\n                            placeholder=\"0\"\r\n                            endAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    NFY\r\n                                </InputAdornment>\r\n                            }\r\n                            color=\"secondary\"\r\n                        />\r\n                    </FormControl>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box width=\"50%\" marginRight={1}>\r\n                            <Button\r\n                                fullWidth\r\n                                type=\"button\"\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                {method.toUpperCase()}\r\n                            </Button>\r\n                        </Box>\r\n                        <Box width=\"70%\" marginLeft={1}>\r\n                            <Button\r\n                                fullWidth\r\n                                type=\"button\"\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                {method.toUpperCase()} ALL\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SlideThree;\r\n","import React from 'react';\r\n\r\nimport { Grid, Box, Typography } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport SlideOne from './slides/SlideOne';\r\nimport SlideTwo from './slides/SlideTwo';\r\nimport SlideThree from './slides/SlideThree';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    marginVertical: {\r\n        marginTop: theme.spacing(),\r\n        marginBottom: theme.spacing(),\r\n    },\r\n    marginBottom: { marginBottom: theme.spacing(0) },\r\n    textUppercase: { textTransform: 'uppercase' },\r\n    trandingItemContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n            justifyContent: 'flex-start',\r\n        },\r\n    },\r\n    carouselContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            // flexDirection: 'column-reverse',\r\n            flexWrap: 'wrap',\r\n        },\r\n    },\r\n    mobileColumn: {\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-between',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nexport const Main = (props) => {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid container item spacing={3}>\r\n                <Grid md={4} xs={12} item>\r\n                    <Box\r\n                        // margin={1}\r\n                        border=\"1px solid\"\r\n                        borderColor=\"green\"\r\n                        padding={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"flex-start\"\r\n                            component=\"div\"\r\n                        >\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    marginRight: 16,\r\n                                }}\r\n                            >\r\n                                {props.currency} Balance\r\n                            </Typography>\r\n                            {/* <Storefront /> */}\r\n                        </Box>\r\n                        <Typography variant=\"h6\">$15</Typography>\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid md={4} xs={12} item>\r\n                    <Box\r\n                        // margin={1}\r\n                        border=\"1px solid\"\r\n                        borderColor=\"green\"\r\n                        padding={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"flex-start\"\r\n                            component=\"div\"\r\n                        >\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    marginRight: 16,\r\n                                }}\r\n                            >\r\n                                {props.currency} Staked\r\n                            </Typography>\r\n                            {/* <Storefront /> */}\r\n                        </Box>\r\n                        <Typography variant=\"h6\">$21103</Typography>\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid md={4} xs={12} item>\r\n                    <Box\r\n                        // margin={1}\r\n                        border=\"1px solid\"\r\n                        borderColor=\"green\"\r\n                        padding={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"flex-start\"\r\n                            component=\"div\"\r\n                        >\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    marginRight: 16,\r\n                                }}\r\n                            >\r\n                                {props.currency} APY\r\n                            </Typography>\r\n                            {/* <Storefront /> */}\r\n                        </Box>\r\n                        <Typography variant=\"h6\">65.235</Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid md={4} xs={12} item>\r\n                    <Box\r\n                        // margin={1}\r\n                        border=\"1px solid\"\r\n                        borderColor=\"green\"\r\n                        padding={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"flex-start\"\r\n                            component=\"div\"\r\n                        >\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    marginRight: 16,\r\n                                }}\r\n                            >\r\n                                {props.currency} Total Supply\r\n                            </Typography>\r\n                            {/* <Storefront /> */}\r\n                        </Box>\r\n                        <Typography variant=\"h6\">$15</Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid md={4} xs={12} item>\r\n                    <Box\r\n                        // margin={1}\r\n                        border=\"1px solid\"\r\n                        borderColor=\"green\"\r\n                        padding={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    marginRight: 16,\r\n                                }}\r\n                            >\r\n                                Total Borrowed\r\n                            </Typography>\r\n\r\n                            {/* <LocalOfferOutlined /> */}\r\n                        </Box>\r\n                        <Typography variant=\"h6\">$2113</Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid md={4} xs={12} item>\r\n                    <Box\r\n                        // margin={1}\r\n                        border=\"1px solid\"\r\n                        borderColor=\"green\"\r\n                        padding={3}\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <Box\r\n                            display=\"flex\"\r\n                            flexDirection=\"row\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    marginRight: 16,\r\n                                }}\r\n                            >\r\n                                Rewards\r\n                            </Typography>\r\n                            {/* <DesktopWindows /> */}\r\n                        </Box>\r\n                        <Typography variant=\"h6\">65.23548</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <br></br>\r\n            <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                spacing={1}\r\n                className={styles.carouselContainer}\r\n            >\r\n                <Grid container xs={12} md={8} justifyContent=\"center\" item>\r\n                    <Carousel\r\n                        navButtonsAlwaysVisible\r\n                        cycleNavigation\r\n                        indicatorIconButtonProps={{ className: 'indicator' }}\r\n                        activeIndicatorIconButtonProps={{\r\n                            className: 'active-indicator',\r\n                        }}\r\n                        autoPlay={false}\r\n                        animation=\"slide\"\r\n                        indicatorContainerProps={{\r\n                            style: {\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                            },\r\n                        }}\r\n                        className=\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-12 carousel\"\r\n                    >\r\n                        <SlideOne />\r\n                        <SlideTwo />\r\n                        <SlideThree />\r\n                    </Carousel>\r\n                </Grid>\r\n                <Grid xs={12} item md={4} alignItems=\"center\">\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        marginBottom={3}\r\n                        border=\"1px solid green\"\r\n                        borderColor={[500]}\r\n                        padding={2}\r\n                        flex={1}\r\n                        className={styles.mobileColumn}\r\n                        marginLeft={2}\r\n                    >\r\n                        <Box display=\"flex\" justifyContent=\"space-between\">\r\n                            <Typography\r\n                                className={clsx(styles.textUppercase)}\r\n                                variant=\"h5\"\r\n                            >\r\n                                Trading - NFY\r\n                            </Typography>\r\n                          \r\n                        </Box>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            justifyContent=\"space-between\"\r\n                            flexWrap=\"wrap\"\r\n                            className={styles.mobileColumn}\r\n\r\n                            // You can stack values you the flex box column, that is how I was able to show underlined value.\r\n                        >\r\n                            <Box display=\"flex\" flexDirection=\"column\">\r\n                                <Typography variant=\"h6\">Value</Typography>\r\n                                <Typography variant=\"h6\">$0</Typography>\r\n                            </Box>\r\n                            <Box display=\"flex\" flexDirection=\"column\">\r\n                                <Typography variant=\"h6\">Value</Typography>\r\n                                <Typography variant=\"h6\">$0</Typography>\r\n                            </Box>\r\n\r\n                            <Box display=\"flex\" flexDirection=\"column\">\r\n                                <Typography variant=\"h6\">\r\n                                    7d Supply APR\r\n                                </Typography>\r\n                                <Typography variant=\"h6\">$500</Typography>\r\n                            </Box>\r\n\r\n                            <Box display=\"flex\" flexDirection=\"column\">\r\n                                <Typography variant=\"h6\">VALUE</Typography>\r\n                                <Typography variant=\"h6\">$1212.45</Typography>\r\n                            </Box>\r\n\r\n                            <Box>\r\n                                {/*                                \r\n                            <Button className=\"btn btn-secondary py-2 px-3 d-inline-block mr-1\">\r\n                                Options\r\n                            </Button> */}\r\n                                {/* <Button className=\"btn btn-primary py-2 px-3 d-inline-block ml-1\">\r\n                                Details\r\n                                <br></br>\r\n                                \r\n                            </Button> */}\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from '../components/Main';\r\n\r\n\r\n\r\nfunction NFY() {\r\n    \r\n    return ( \r\n    <div className= \"nfy-view\" id=\"nfy-view\">\r\n    <Main currency=\"NFY\"/>\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default NFY;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport '../../src/index.css';\r\n// import Main2 from '../components/Main2';\r\n\r\nfunction BitAlliance() {\r\n    return (\r\n        <div\r\n        // className= \"bitAlliance-view\" id=\"bitAlliance-view\"\r\n        >\r\n             {/* <Main2 currency=\"BitAlliance\"/> */}\r\n\r\n            <Typography\r\n                variant=\"h5\"\r\n                style={{\r\n                    textAlign: 'center',\r\n                    fontWeight: '500px',\r\n                    fontFamily: 'Verdana',\r\n                    color: '#0000f',\r\n                }}\r\n            >\r\n                Bit Alliance Coming Soon!\r\n            </Typography>\r\n            <br></br>\r\n\r\n            <br></br>\r\n\r\n            <Typography\r\n                variant=\"h6\"\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginLeft: '100px',\r\n                    marginRight: '100px',\r\n                    color: '#39FF14',\r\n                }}\r\n            >\r\n                “Tracking your investments is what we can give you”\r\n            </Typography>\r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BitAlliance;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction Tek() {\r\n    return  <Typography\r\n    variant=\"h5\"\r\n    style={{\r\n        textAlign: 'center',\r\n        fontWeight: '500px',\r\n        fontFamily: 'Verdana',\r\n        color: '#0000f',\r\n    }}\r\n>\r\n    ESKRANO ADD YOUR TRANSFER CODE HERE PLEASE.\r\n</Typography>\r\n}\r\n\r\nexport default Tek;\r\n","import { React } from 'react';\r\nimport { useEthers, useEtherBalance } from '@usedapp/core';\r\nimport { formatEther } from '@ethersproject/units';\r\n\r\nexport default function EtherBalance () {\r\n    const { account } = useEthers();\r\n\r\n    let etherBalance = formatEther(useEtherBalance(account))\r\n\r\n    return (\r\n        <div>\r\n            {etherBalance}\r\n        </div>\r\n    )\r\n}","import { React } from 'react';\r\nimport { useEthers, useTokenBalance } from '@usedapp/core';\r\nimport { formatUnits } from '@ethersproject/units';\r\n\r\nexport default function TokenBalance ({address}) {\r\n    const { account } = useEthers()\r\n    const tokenBalance = useTokenBalance(address, account)\r\n\r\n    return (\r\n        <div>\r\n            {tokenBalance ? formatUnits(tokenBalance, 18) : 'N/A'}\r\n        </div>\r\n    )\r\n}","import {React} from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport EtherBalance from './EtherBalance'\r\nimport TokenBalance from './TokenBalance'\r\n\r\n\r\n\r\nexport default function TokenBalanceWidget({tokenAddress,tokenLabel}) {\r\n    return (\r\n        <div>\r\n            <Grid container spacing = {3}>\r\n                <Grid item xs={6}>\r\n                    {tokenLabel}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    {tokenAddress === null ? <EtherBalance/> : <TokenBalance address={tokenAddress}/>}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport { Box, Button, Typography } from '@material-ui/core';\r\nimport { useEthers } from '@usedapp/core';\r\nimport TokenBalanceWidget from  './../widgets/TokenBalanceWidget'\r\n\r\nfunction WalletConnect ({closeModal}) {\r\n\r\n    const { account, deactivate } = useEthers();\r\n    return (\r\n        <div>\r\n           <Box>\r\n                <Typography variant = \"h6\"> Wallet ID: &nbsp;{ account }</Typography>\r\n                <Typography variant = \"button\">\r\n                   \r\n                </Typography>\r\n\r\n                <TokenBalanceWidget\r\n                    tokenLabel=\"ETH\"\r\n                    tokenAddress={null}\r\n                />\r\n\r\n                <TokenBalanceWidget\r\n                    tokenLabel=\"DAI\"\r\n                    tokenAddress=\"0x6b175474e89094c44da98b954eedeac495271d0f\"\r\n                />\r\n                <br></br>\r\n\r\n                <Button\r\n                    className=\"mt-3\"\r\n                    onClick={() => {\r\n                        closeModal();\r\n                        deactivate();\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"medium\"\r\n                >\r\n                    Logout\r\n                </Button>\r\n           </Box>\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WalletConnect;","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Modal } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaDiscord, FaTelegram, FaTwitter } from 'react-icons/fa';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useEthers, useEtherBalance } from '@usedapp/core';\r\nimport { formatEther } from '@ethersproject/units';\r\nimport WalletConnect from './../components/modals/WalletConnect'\r\n\r\nlet theme = createTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: green[500],\r\n            light: '#fff',\r\n            dark: '#000',\r\n            contrastText: '#fff',\r\n        },\r\n        type: 'dark',\r\n        background: {\r\n            default: '#191c24',\r\n            paper: '#191c24',\r\n        },\r\n    },\r\n});\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        backgroundColor: theme.palette.background.default,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    drawer: {\r\n        width: 0,\r\n        flexShrink: 1,\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('lg')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        marginBottom: 56,\r\n    },\r\n    closeMenuButton: {\r\n        marginRight: 'auto',\r\n        marginLeft: 0,\r\n    },\r\n    toolbarBottom: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        left: drawerWidth,\r\n        right: 0,\r\n        backgroundColor: '#191c24',\r\n        zIndex: 1000,\r\n        [theme.breakpoints.down('md')]: {\r\n            left: 0,\r\n        },\r\n    },\r\n    active: { borderLeft: '10px solid', borderLeftColor: green[500] },\r\n    nav: {\r\n        // [theme.breakpoints.up('md')]: {\r\n        //     border: '1px solid #f00',\r\n        // },\r\n        // [theme.breakpoints.down('lg')]: {\r\n        //     border: '1px solid #0f0',\r\n        //     width: 0,\r\n        // },\r\n    },\r\n}));\r\n\r\nconst dummyCategories = [\r\n    {\r\n        name: 'NFY',\r\n        route: 'nfy',\r\n    },\r\n    {\r\n        name: 'Diamond NFY',\r\n        route: 'Diamond',\r\n    },\r\n    {\r\n        name: 'Tek',\r\n        route: 'tek',\r\n    },\r\n\r\n    {\r\n        name: 'Bit Alliance',\r\n        route: 'bit-alliance',\r\n    },\r\n    // // {\r\n    //     name: 'Mimir',\r\n    //     route: 'mimir',\r\n    // },\r\n   \r\n    // {\r\n    //     name: 'Churche Of The Chain',\r\n    //     route: 'churche-of-the-chain',\r\n    // },\r\n    // {\r\n    //     name: 'Eros',\r\n    //     route: 'eros',\r\n    // },\r\n    // {\r\n    //     name: 'Pantheon',\r\n    //     route: 'pantheon',\r\n    // },\r\n];\r\nfunction ResponsiveDrawer({ children }) {\r\n    const classes = useStyles();\r\n    const { activateBrowserWallet, account } = useEthers();\r\n    const etherBalance = useEtherBalance(account);\r\n    // const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [activeRoute, setActiveRoute] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n\r\n    const drawer = (\r\n        <>\r\n            {dummyCategories.map((menu) => (\r\n                <NavLink\r\n                    to={`/${menu.route}`}\r\n                    style={{\r\n                        textDecoration: 'none',\r\n                        color: theme.palette.secondary.light,\r\n                    }}\r\n                    onClick={() => setActiveRoute(menu.route)}\r\n                    className={activeRoute === menu.route ? 'active' : ''}\r\n                    key={menu.route}\r\n                >\r\n                    <ListItem button>\r\n                        <div className={`image ${menu.route}`} />\r\n                        <ListItemText primary={menu.name} />\r\n                    </ListItem>\r\n                </NavLink>\r\n            ))}\r\n        </>\r\n    );\r\n\r\n    const [modalWalletOpened, setModalWalletOpened] = useState(false);\r\n\r\n    \r\n\r\n    const ConnectWalletSection = (\r\n        <>\r\n            {!account && (\r\n                <Button\r\n                    onClick={() => activateBrowserWallet()}\r\n                    variant=\"outlined\"\r\n                    color=\"inherit\"\r\n                >\r\n                    Connect Wallet\r\n                </Button>\r\n            )}\r\n\r\n            {account && etherBalance && (\r\n\r\n                        <p>\r\n                            \r\n                            <Modal \r\n                                open={modalWalletOpened} \r\n                                onClose={() => setModalWalletOpened(false)}\r\n                                aria-labelledby=\"wallet-modal\"\r\n                                aria-describedby=\"wallet-modal-info\"\r\n                            >\r\n                                <div style={{\r\n                                    top: `50%`,\r\n                                    left: `50%`,\r\n                                    transform: `translate(-50%, -50%)`,\r\n                                    backgroundColor: theme.palette.background.default\r\n                                  }} className={classes.modal}>\r\n                                      <WalletConnect closeModal={() => setModalWalletOpened(false)}></WalletConnect>\r\n                                  </div>\r\n                            </Modal>\r\n\r\n\r\n                            <Button\r\n                                className=\"ml-3\"\r\n                                onClick={() => setModalWalletOpened(true)}\r\n                                variant=\"outlined\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                            >\r\n                                {String(account).substr(0, 6)} {formatEther(etherBalance)}{' '} ETH\r\n                            </Button>\r\n                        </p>\r\n                        \r\n               \r\n            )}\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classes.appBar}\r\n                    color=\"inherit\"\r\n                >\r\n                    <Toolbar\r\n                        style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'space-between',\r\n                        }}\r\n                    >\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            edge=\"start\"\r\n                            onClick={handleDrawerToggle}\r\n                            className={classes.menuButton}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Dashboard\r\n                        </Typography>\r\n\r\n                        {ConnectWalletSection}\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <nav className={clsx(classes.nav)}>\r\n                    {/* For smaller screens e.g. mobile devices or tablets */}\r\n                    <Hidden lgUp>\r\n                        <Drawer\r\n                            variant=\"temporary\"\r\n                            anchor={\r\n                                theme.direction === 'rtl' ? 'right' : 'left'\r\n                            }\r\n                            open={mobileOpen}\r\n                            onClose={handleDrawerToggle}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            ModalProps={{\r\n                                keepMounted: true, // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                onClick={handleDrawerToggle}\r\n                                className={classes.closeMenuButton}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            \r\n                            <NavLink\r\n                                to=\"/Dashboard\"\r\n                                style={{\r\n                                    textDecoration: 'none',\r\n                                    color: theme.palette.secondary.light,\r\n                                }}\r\n                                onClick={() => setActiveRoute('Dashboard')}\r\n                                className={\r\n                                    activeRoute === 'Dashboard'\r\n                                        ? 'active'\r\n                                        : ''\r\n                                }\r\n                            >\r\n                                <ListItem button>\r\n                                    \r\n                                       {/* <MenuIcon />\r\n                                 */}\r\n                                    {/* <ListItemText primary=\"Dashboard\" /> */}\r\n                                </ListItem>\r\n                            </NavLink> \r\n\r\n\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n                    {/* For larger screens */}\r\n                    <Hidden mdDown>\r\n                        <Drawer\r\n                            className={classes.drawer}\r\n                            variant=\"permanent\"\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                        >\r\n                            <div className={classes.toolbar} />\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </nav>\r\n                <div className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {children}\r\n                    <Toolbar className={classes.toolbarBottom}>\r\n                        <Typography variant=\"body1\" color=\"inherit\">\r\n                            © {new Date().getFullYear()}\r\n                        </Typography>\r\n                        <Box>\r\n                            <a\r\n                                href=\"https://twitter.com/NFYFinance?s=20\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <IconButton>\r\n                                    <FaTwitter\r\n                                        color={theme.palette.secondary.light}\r\n                                    />\r\n                                </IconButton>\r\n                            </a>\r\n                            <a\r\n                                href=\"https://discord.gg/RqsBuMWyPV\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <IconButton>\r\n                                    <FaDiscord\r\n                                        color={theme.palette.secondary.light}\r\n                                    />\r\n                                </IconButton>\r\n                            </a>\r\n                            <a\r\n                                href=\"https://t.me/NFYOfficialChat\"\r\n                                rel=\"noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                <IconButton>\r\n                                    <FaTelegram\r\n                                        color={theme.palette.secondary.light}\r\n                                    />\r\n                                </IconButton>\r\n                            </a>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </div>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import React from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    btn: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    backBtn: {\r\n        justifyContent: 'flex-start',\r\n    },\r\n    nexBtn: {\r\n        justifyContent: 'flex-end',\r\n    },\r\n}));\r\n\r\nfunction Buttons({ step, setStep, allSteps }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12} container className={classes.container}>\r\n            <Grid xs={6} className={clsx(classes.btn, classes.backBtn)}>\r\n                {step > 0 && (\r\n                    <Button\r\n                        onClick={() => {\r\n                            setStep(step - 1);\r\n                        }}\r\n                        variant=\"contained\" color=\"secondary\"\r\n                    >\r\n                        Previous\r\n                    </Button>\r\n                )}\r\n            </Grid>\r\n            <Grid item xs={6} className={clsx(classes.btn, classes.nexBtn)}>\r\n                {step < allSteps.length - 1 && (\r\n                    <Button\r\n                        onClick={() => {\r\n                            if (step < allSteps.length - 1) {\r\n                                setStep(step + 1);\r\n                            }\r\n                        }}\r\n                        variant=\"contained\" color=\"secondary\"\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, Grid, Snackbar, Typography } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Page1({ selectedBlocks, setSelectedBlocks }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleClick = (block) => {\r\n\r\n        console.log({selectedBlocks})\r\n        if (selectedBlocks.find((b) => b.value === block)) {\r\n            setSelectedBlocks(selectedBlocks.filter((b) => b.value !== block));\r\n            setMessage(`${block} unselected`);\r\n        } else {\r\n            setSelectedBlocks([...selectedBlocks, {value: block, timestamp: new Date().toISOString()}]);\r\n            setMessage(`${block} selected`);\r\n        }\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const data = [\r\n        'ERC20',\r\n        'ERC1115',\r\n        'ERC721',\r\n        'BEP20',\r\n        'ALTChain20',\r\n        'Altchain20',\r\n    ];\r\n\r\n    return (\r\n        <Grid item xs={12} container spacing={3}>\r\n            {data.map((block) => (\r\n                <Grid key={block} item xs={12} sm={4}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        borderColor=\"primary\"\r\n                        border=\"1px solid green\"\r\n                        padding={3}\r\n                    >\r\n                        <Typography variant=\"body1\">{block}</Typography>\r\n                        <Box marginTop={2}>\r\n                            <Button\r\n                                variant=\"contained\" color=\"secondary\"\r\n                                onClick={() => handleClick(block)}\r\n                            >\r\n                                {selectedBlocks.find((b) => b.value === block)\r\n                                    ? 'Remove'\r\n                                    : 'Select'}\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            ))}\r\n            <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Page1;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Checkbox,\r\n    Grid,\r\n    Snackbar,\r\n    Typography,\r\n    TextField,\r\n    // Button,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction Page2({\r\n    selectedFacets,\r\n    setSelectedFacets,\r\n    facets,\r\n    values,\r\n    setValues,\r\n}) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleClick = (block, value) => {\r\n        if (selectedFacets.find((b) => b.name === block)) {\r\n            setSelectedFacets(selectedFacets.filter((b) => b.name !== block));\r\n            setMessage(`${block} unselected`);\r\n        } else {\r\n            setSelectedFacets([...selectedFacets, { name: block, value, timestamp: new Date().toISOString() }]);\r\n            setMessage(`${block} selected`);\r\n        }\r\n        setOpen(true);\r\n        console.log({ selectedFacets });\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const onChange = (e, facet) => {\r\n        const foundFacet = selectedFacets.find(\r\n            (_facet) => _facet.name === facet\r\n        );\r\n\r\n        if (foundFacet) {\r\n            setSelectedFacets([\r\n                ...selectedFacets.filter((f) => f.name !== foundFacet.name),\r\n                {\r\n                    ...foundFacet,\r\n                    value: e.target.value,\r\n                },\r\n            ]);\r\n        }\r\n\r\n        setValues({\r\n            ...values,\r\n            [facet]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12} container spacing={2}>\r\n            {facets.map((facet) => (\r\n                <Grid key={facet} item xs={12} sm={4}>\r\n                    <Box\r\n                        display=\"flex\"\r\n                        alignItems=\"flex-start\"\r\n                        flexDirection=\"column\"\r\n                        justifyContent=\"center\"\r\n                        borderColor=\"primary\"\r\n                        border=\"1px solid green\"\r\n                        padding={2}\r\n                    >\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                            <Checkbox\r\n                                checked={\r\n                                    selectedFacets.findIndex(\r\n                                        (_facet) => _facet.name === facet\r\n                                    ) > -1\r\n                                }\r\n                                onChange={() =>\r\n                                    handleClick(facet, values[facet])\r\n                                }\r\n                                color=\"secondary\"\r\n                            />\r\n                            <Typography variant=\"body1\">{facet}</Typography>\r\n                        </Box>\r\n                        <Box\r\n                            marginTop={2}\r\n                            display=\"flex\"\r\n                            justifyContent=\"center\"\r\n                            style={{\r\n                                margin: 'auto',\r\n                            }}\r\n                        >\r\n                            <TextField\r\n                                placeholder=\"Value\"\r\n                                color=\"secondary\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={values[facet]}\r\n                                onChange={(e) => onChange(e, facet)}\r\n                            />\r\n                        </Box>\r\n                        {/* <Box justifySelf=\"flex-end\" flex={0} marginLeft=\"auto\" >\r\n                            <Button variant=\"contained\" color=\"secondary\">Info</Button>\r\n                        </Box> */}\r\n                    </Box>\r\n                </Grid>\r\n            ))}\r\n            <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Page2;\r\n","import {useState} from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n// import dateTime from '../../dateTime';\r\n\r\nimport React from \"react\";\r\n\r\nfunction Page3({ selectedBlocks, selectedFacets }) {\r\n    const [fields, setFields] = useState({tokenName: '', tokenSymbol: '', decimals: 0, supply: 0, totalSupply: 0})\r\n\r\n    const onChange = (e) => {\r\n        const {name, value} = e.target;\r\n\r\n        setFields({...fields, [name]: value});\r\n\r\n    }\r\n\r\n    const onDeploy = (e) => {\r\n        e.preventDefault();\r\n\r\n        const payload = {...fields, selectedBlocks, selectedFacets};\r\n\r\n        console.log({payload});\r\n\r\n    }\r\n\r\n  return (\r\n    <Grid item container xs={12} spacing={3}>\r\n      <Grid xs={12} md={8} item>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>Value</TableCell>\r\n                <TableCell>Date</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {selectedBlocks.map((block) => {\r\n                const date = `${new Date(block.timestamp).getDate()}/${\r\n                  new Date(block.timestamp).getMonth() + 1\r\n                }/${new Date(block.timestamp).getFullYear()} ${new Date(\r\n                  block.timestamp\r\n                ).getHours()}:${new Date(\r\n                  block.timestamp\r\n                ).getMinutes()}:${new Date(block.timestamp).getSeconds()}`;\r\n                return (\r\n                  <TableRow key={block.value}>\r\n                    <TableCell>{block.value}</TableCell>\r\n                    <TableCell>1</TableCell>\r\n                    <TableCell>{date}</TableCell>\r\n                    {/* <TableCell>\r\n                                        <Button variant=\"text\">Edit</Button>{' '}\r\n                                    </TableCell> */}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              {selectedFacets.map((facet) => {\r\n                const date = `${new Date(facet.timestamp).getDate()}/${\r\n                  new Date(facet.timestamp).getMonth() + 1\r\n                }/${new Date(facet.timestamp).getFullYear()} ${new Date(\r\n                  facet.timestamp\r\n                ).getHours()}:${new Date(\r\n                  facet.timestamp\r\n                ).getMinutes()}:${new Date(facet.timestamp).getSeconds()}`;\r\n                return (\r\n                  <TableRow key={facet.name}>\r\n                    <TableCell>{facet.name}</TableCell>\r\n                    <TableCell>{facet.value}</TableCell>\r\n                    <TableCell>{date}</TableCell>\r\n                    {/* <TableCell> */}\r\n                    {/* <Button variant=\"text\">Edit</Button> */}\r\n                    {/* </TableCell> */}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <Grid xs={12} md={4} item>\r\n        <Box padding={3} border=\"1px solid green\">\r\n          <Box>\r\n            <Box marginBottom={2}>\r\n              <TextField\r\n                placeholder=\"Token name\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                name=\"tokenName\"\r\n                value={fields.tokenName}\r\n                onChange={onChange}\r\n              />\r\n            </Box>\r\n            <Box marginBottom={2}>\r\n              <TextField\r\n                placeholder=\"Token symbol\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                name=\"tokenSymbol\"\r\n                value={fields.tokenSymbol}\r\n                onChange={onChange}\r\n              />\r\n            </Box>\r\n            <Box marginBottom={2}>\r\n              <TextField\r\n                placeholder=\"Total decimals\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                name=\"decimals\"\r\n                value={fields.decimals}\r\n                onChange={onChange}\r\n                type=\"number\"\r\n              />\r\n            </Box>\r\n            <Box marginBottom={2}>\r\n              <TextField\r\n                placeholder=\"Supply\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                name=\"supply\"\r\n                value={fields.supply}\r\n                onChange={onChange}\r\n                type=\"number\"\r\n              />\r\n            </Box>\r\n            <Box marginBottom={2}>\r\n              <TextField\r\n                placeholder=\"Total Supply\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                fullWidth\r\n                name=\"totalSupply\"\r\n                value={fields.totalSupply}\r\n                onChange={onChange}\r\n                type=\"number\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box padding={1} border=\"1px solid green\">\r\n            {selectedBlocks.map((block) => (\r\n              <Typography key={block.value}>\r\n                {block.value}: &nbsp;1 NFY\r\n              </Typography>\r\n            ))}\r\n            {selectedFacets.map((facet) => (\r\n              <Typography key={facet.name}>\r\n                {facet.name}:&nbsp;{facet.value}&nbsp;NFY\r\n              </Typography>\r\n            ))}\r\n            <Box marginTop={3}>\r\n              <Typography>\r\n                Total:&nbsp;\r\n                {selectedFacets.reduce(\r\n                  (prevSum, currentFacet) =>\r\n                    prevSum + Number(currentFacet.value),\r\n                  0\r\n                ) + selectedBlocks.reduce((prevSum) => prevSum + 1, 0)}\r\n                &nbsp;NFY\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"center\" marginTop={3}>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={onDeploy} >\r\n              Deploy\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Page3;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Buttons from '../components/diamond/Buttons';\r\nimport Page1 from '../components/diamond/Page1';\r\nimport Page2 from '../components/diamond/Page2';\r\nimport Page3 from '../components/diamond/Page3';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: { display: 'flex', justifyContent: 'center' },\r\n}));\r\n\r\nfunction Diamond() {\r\n    const styles = useStyles();\r\n\r\n    const [step, setStep] = useState(0);\r\n    const [selectedBlocks, setSelectedBlocks] = useState([]);\r\n    const [selectedFacets, setSelectedFacets] = useState([]);\r\n    const [values, setValues] = useState({\r\n        Rebase: '0',\r\n        Yeam: '0',\r\n        Fot: '0',\r\n        value1: '0',\r\n        value2: '0',\r\n        value3: '0',\r\n    });\r\n\r\n    const facets = ['Rebase', 'Yeam', 'Fot', 'value1', 'value2', 'value3'];\r\n\r\n    const allSteps = [\r\n        <Page1\r\n            selectedBlocks={selectedBlocks}\r\n            setSelectedBlocks={setSelectedBlocks}\r\n        />,\r\n        <Page2\r\n            selectedFacets={selectedFacets}\r\n            setSelectedFacets={setSelectedFacets}\r\n            facets={facets}\r\n            values={values}\r\n            setValues={setValues}\r\n        />,\r\n        <Page3\r\n            selectedBlocks={selectedBlocks}\r\n            selectedFacets={selectedFacets}\r\n        />,\r\n    ];\r\n\r\n    return (\r\n        <Grid container className={styles.container}>\r\n            {allSteps[step]}\r\n            <Buttons allSteps={allSteps} step={step} setStep={setStep} />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Diamond;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n// import { MuiThemeProvider } from '@material-ui/core';\r\n\r\nimport NFY from \"./views/NFY\";\r\nimport BitAlliance from \"./views/BitAlliance\";\r\nimport Tek from \"./views/tek\";\r\n// import ChurcheOfTheChain from './views/ChurcheOfTheChain';\r\n// import Eros from './views/Eros';\r\n// import Mimir from './views/Mimir';\r\n// import Pantheon from './views/Pantheon';\r\nimport Layout from \"./layout\";\r\nimport Diamond from \"./views/Diamond\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Layout>\r\n            <NFY />\r\n          </Layout>\r\n        </Route>\r\n        <Route path=\"/nfy\" exact>\r\n          <Layout>\r\n            <NFY />\r\n          </Layout>\r\n        </Route>\r\n        <Route path=\"/diamond\" exact>\r\n          <Layout>\r\n            <Diamond />\r\n          </Layout>\r\n\r\n          {/* </Route>\r\n                <Route path=\"/churche-of-the-chain\" exact>\r\n                    <Layout>\r\n                        <ChurcheOfTheChain />\r\n                    </Layout>\r\n                </Route>\r\n                <Route path=\"/eros\" exact>\r\n                    <Layout>\r\n                        <Eros />\r\n                    </Layout>\r\n                </Route>\r\n                <Route path=\"/mimir\" exact>\r\n                    <Layout>\r\n                        <Mimir />\r\n                    </Layout>\r\n                </Route>\r\n                <Route path=\"/pantheon\" exact>\r\n                    <Layout>\r\n                        <Pantheon />\r\n                    </Layout> */}\r\n        </Route>\r\n        <Route path=\"/tek\" exact>\r\n          <Layout>\r\n            <Tek />\r\n          </Layout>\r\n        </Route>\r\n        <Route path=\"/bit-alliance\" exact>\r\n          <Layout>\r\n            <BitAlliance />\r\n          </Layout>\r\n        </Route>\r\n        <Redirect to=\"/nfy\">\r\n          <Layout>\r\n            <NFY />\r\n          </Layout>\r\n        </Redirect>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChainId, DAppProvider } from '@usedapp/core'\r\n\r\nconst configDApp = {\r\n  readOnlyChainId: ChainId.Ropsten,\r\n  readOnlyUrls: {\r\n    [ChainId.Ropsten]: 'https://ropsten.infura.io/v3/60159d12d2154d9392e078fb59a18658',\r\n  },\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DAppProvider config={configDApp}>\r\n      <App />\r\n    </DAppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}